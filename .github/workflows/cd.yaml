name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: dankbytes
            archive: dankbytes-dev-x86_64-linux.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: dankbytes
            archive: dankbytes-dev-x86_64-macos.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: dankbytes.exe
            archive: dankbytes-dev-x86_64-windows.zip

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --target ${{ matrix.target }}
      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/debug
          tar czf ../../../${{ matrix.archive }} ${{ matrix.binary }}
      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/debug
          7z a ../../../${{ matrix.archive }} ${{ matrix.binary }}
      - name: Detect version bump and set tag
        if: matrix.os == 'ubuntu-latest'
        id: version_bump
        shell: bash
        run: |
          latest_tag=$(git tag --list 'v*' --sort=-v:refname | head -n1)
          version=$(grep '^version' Cargo.toml | head -1 | sed 's/.*"\(.*\)".*/\1/')
          if [[ "$latest_tag" != "v$version" ]]; then
            echo "tag=v$version" >> $GITHUB_OUTPUT
            echo "is_bump=true" >> $GITHUB_OUTPUT
          else
            echo "tag=dev-latest" >> $GITHUB_OUTPUT
            echo "is_bump=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_bump.outputs.tag || 'dev-latest' }}
          name: ${{ steps.version_bump.outputs.tag == 'dev-latest' && '⚠️ dev-latest' || steps.version_bump.outputs.tag }}
          prerelease: ${{ steps.version_bump.outputs.is_bump != 'true' }}
          draft: false
          body: |
            ${{ steps.version_bump.outputs.is_bump == 'true' && format('Official release {0} from commit {1}', steps.version_bump.outputs.tag, github.sha) || format('Rolling development build from commit {0}', github.sha) }}
          files: ${{ matrix.archive }}
        if: matrix.os == 'ubuntu-latest'

      - name: Upload to Release (other platforms)
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_bump.outputs.tag || 'dev-latest' }}
          files: ${{ matrix.archive }}
        if: matrix.os != 'ubuntu-latest'
