name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]


permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: dankbytes
            simple_target: x86_64-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: dankbytes
            simple_target: x86_64-macos
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: dankbytes.exe
            simple_target: x86_64-windows

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
          
      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}-v1
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}-
            ${{ runner.os }}-cargo-

      - name: Build
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Set archive name
        id: archive
        shell: bash
        run: |
          echo "archive=dankbytes-${{ matrix.simple_target }}.tar.gz" >> $GITHUB_OUTPUT
          echo "archive_win=dankbytes-${{ matrix.simple_target }}.zip" >> $GITHUB_OUTPUT

      - name: Package (Unix)
        shell: bash
        if: matrix.os != 'windows-latest'
        run: |
          cd ${{ github.workspace }}
          tar -czf ./dankbytes-${{ matrix.simple_target }}.tar.gz -C target/${{ matrix.target }}/release ${{ matrix.binary }}

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          WORKSPACE=$(echo "${{ github.workspace }}" | sed 's/\\/\//g' | sed 's/://')
          cd "/$WORKSPACE"
          7z a -tzip "./dankbytes-${{ matrix.simple_target }}.zip" "./target/${{ matrix.target }}/release/${{ matrix.binary }}"

      - name: Update Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          name: ⚠️ latest build
          prerelease: true
          draft: false
          body: |
            latest build from commit ${{ github.sha }}
            beware, here be dragons
          files: ${{ matrix.os == 'windows-latest' && steps.archive.outputs.archive_win || steps.archive.outputs.archive }}
