name: CI

on:
  push:
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'build.rs'
      - '.github/workflows/**'
    branches: [
      main
    ]
  pull_request:
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'build.rs'
    branches: [
      main
    ]
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests'
        required: true
        default: 'true'
      run_lint:
        description: 'Run lint'
        required: true
        default: 'true'
      run_format:
        description: 'Run format'
        required: true
        default: 'true'
      run_build:
        description: 'Run build'
        required: true
        default: 'true'
  
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  
jobs:
  check:
    name: Check ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            target/
          key: ci-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ci-${{ runner.os }}-cargo-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
          components: rustfmt, clippy

      - name: Run tests
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_tests == 'true' || github.event_name != 'workflow_dispatch' }}
        run: cargo test --target ${{ matrix.target }} --verbose

      - name: Run lint
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_lint == 'true' || github.event_name != 'workflow_dispatch' }}
        run: cargo clippy --target ${{ matrix.target }} -- -D warnings

      - name: Run format
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_format == 'true' || github.event_name != 'workflow_dispatch' }}
        run: cargo fmt -- --check

      - name: Run build
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_build == 'true' || github.event_name != 'workflow_dispatch' }}
        run: cargo build --target ${{ matrix.target }} --release
